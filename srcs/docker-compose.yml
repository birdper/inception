version: '3.9'

services:

  nginx:
    container_name: nginx
    build: 
      context: ./requirements/nginx
      args:
        - DOMAIN_NAME=${DOMAIN_NAME}
        - CERTS_CRT=${CERTS_CRT}
        - CERTS_KEY=${CERTS_KEY}
    env_file: .env
    restart: always
    depends_on:
      - wordpress
    volumes:
      - wp_data:/var/www/html/wordpress
    ports:
      - 80:80
      - 443:443
    networks:
      - web-inception

  wordpress:
    container_name: wordpress
    build: 
      context: ./requirements/wordpress
      args:
        - WP_DEBUG=false
        - WP_DB_HOST=mariadb
        - WP_DB_NAME=${MYSQL_DATABASE}
        - WP_DB_USER=${MYSQL_USER}
        - WP_DB_PASSWORD=${MYSQL_PASSWORD}
    env_file: .env
    volumes:
      - wp_data:/var/www/html/wordpress
    restart: always
    depends_on:
      - mariadb
    expose:
      - 9000
    networks:
      - web-inception

  mariadb:
    container_name: mariadb
    build: 
      context: ./requirements/mariadb
      args:
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
    env_file: .env
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    expose:
      - 3306
    networks:
      - web-inception
      

  adminer:
    image: adminer
    restart: always
    networks:
      - web-inception
    ports:
      - 8080:8080

volumes:
  db_data:
    name: db_data
    driver: local
    driver_opts:
      device: /home/nbirdper/data/db_data
      type: none
      o: bind
  wp_data:
    name: wp_data
    driver: local
    driver_opts:
      device: /home/nbirdper/data/wp_data
      type: none
      o: bind


networks:
  web-inception:
    name: 'web-inception'

